/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by vite-plugin-swagger2ts
export interface PathsApifox_Echo_copy {
  "/get": {
    get: {
      param: { query: { q1?: string; q2?: string } };
      /**
       * @description 成功
       **/
      response: {
        args: { q1: string; q2: string };
        headers: {
          Accept: string;
          "Accept-Encoding": string;
          Connection: string;
          Host: string;
          "User-Agent": string;
        };
        origin: string;
        url: string;
      };
    };
  };
  "/post": {
    post: {
      param: {
        query: { q1?: string; q2?: string };
        body: { d: string; dd: string };
      };
      /**
       * @description OK
       **/
      response: {
        args: { q1: string; q2: string };
        data: string;
        files: { [x: string | number]: any };
        form: { b1: string; b2: string };
        headers: {
          Accept: string;
          "Accept-Encoding": string;
          Connection: string;
          "Content-Length": string;
          "Content-Type": string;
          Host: string;
          "User-Agent": string;
        };
        json: string;
        origin: string;
        url: string;
      };
    };
  };
  "/delete": {
    delete: {
      param: {
        query: { q1?: string };
        body: {
          /**
           * @example v1
           **/
          b1: string;
          /**
           * @example v2
           **/
          b2: string;
        };
      };
      /**
       * @description OK
       **/
      response: {
        args: { q1: string };
        data: string;
        files: { [x: string | number]: any };
        form: { b1: string; b2: string };
        headers: {
          Accept: string;
          "Accept-Encoding": string;
          Connection: string;
          "Content-Length": string;
          "Content-Type": string;
          Host: string;
          "User-Agent": string;
        };
        json: string;
        origin: string;
        url: string;
      };
    };
  };
  "/patch": {
    patch: {
      param: { query: { q1?: string }; body: { b1: string; b2: string } };
      /**
       * @description OK
       **/
      response: {
        args: { q1: string };
        data: string;
        files: { [x: string | number]: any };
        form: { [x: string | number]: any };
        headers: {
          Accept: string;
          "Accept-Encoding": string;
          Connection: string;
          "Content-Length": string;
          "Content-Type": string;
          Host: string;
          "User-Agent": string;
        };
        json: { b1: string; b2: string };
        origin: string;
        url: string;
      };
    };
  };
  "/put": {
    put: {
      param: { query: { q1?: string }; body: string };
      /**
       * @description OK
       **/
      response: {
        args: { q1: string };
        data: string;
        files: { [x: string | number]: any };
        form: { [x: string | number]: any };
        headers: {
          Accept: string;
          "Accept-Encoding": string;
          Connection: string;
          "Content-Length": string;
          "Content-Type": string;
          Host: string;
          "User-Agent": string;
        };
        json: string;
        origin: string;
        url: string;
      };
    };
  };
  "/status/{codes}": {
    delete: {
      param: {
        path: {
          /**
           * @description HTTP状态码，多个状态码使用英文逗号分隔
           **/
          codes: string;
        };
      };
      /**
       * @description Informational responses
       **/
      response: { [x: string | number]: any };
    };
    get: {
      param: {
        path: {
          /**
           * @description HTTP状态码，多个状态码使用英文逗号分隔
           **/
          codes: string;
        };
      };
      /**
       * @description Informational responses
       **/
      response: { [x: string | number]: any };
    };
    patch: {
      param: {
        path: {
          /**
           * @description HTTP状态码，多个状态码使用英文逗号分隔
           **/
          codes: string;
        };
      };
      /**
       * @description Informational responses
       **/
      response: { [x: string | number]: any };
    };
    post: {
      param: {
        path: {
          /**
           * @description HTTP状态码，多个状态码使用英文逗号分隔
           **/
          codes: string;
        };
      };
      /**
       * @description Informational responses
       **/
      response: { [x: string | number]: any };
    };
    put: {
      param: {
        path: {
          /**
           * @description HTTP状态码，多个状态码使用英文逗号分隔
           **/
          codes: string;
        };
      };
      /**
       * @description Informational responses
       **/
      response: { [x: string | number]: any };
    };
    trace: {
      param: {
        path: {
          /**
           * @description HTTP状态码，多个状态码使用英文逗号分隔
           **/
          codes: string;
        };
      };
      /**
       * @description Informational responses
       **/
      response: { [x: string | number]: any };
    };
  };
  "/anything": {
    delete: {
      /**
       * @description Anything passed in request
       **/
      response: { [x: string | number]: any };
    };
    get: {
      /**
       * @description Anything passed in request
       **/
      response: { [x: string | number]: any };
    };
    patch: {
      /**
       * @description Anything passed in request
       **/
      response: { [x: string | number]: any };
    };
    post: {
      /**
       * @description Anything passed in request
       **/
      response: { [x: string | number]: any };
    };
    put: {
      /**
       * @description Anything passed in request
       **/
      response: { [x: string | number]: any };
    };
    trace: {
      /**
       * @description Anything passed in request
       **/
      response: { [x: string | number]: any };
    };
  };
  "/anything/{anything}": {
    delete: {
      param: { path: { anything: string } };
      /**
       * @description Anything passed in request
       **/
      response: { [x: string | number]: any };
    };
    get: {
      param: { path: { anything: string } };
      /**
       * @description Anything passed in request
       **/
      response: { [x: string | number]: any };
    };
    patch: {
      param: { path: { anything: string } };
      /**
       * @description Anything passed in request
       **/
      response: { [x: string | number]: any };
    };
    post: {
      param: { path: { anything: string } };
      /**
       * @description Anything passed in request
       **/
      response: { [x: string | number]: any };
    };
    put: {
      param: { path: { anything: string } };
      /**
       * @description Anything passed in request
       **/
      response: { [x: string | number]: any };
    };
    trace: {
      param: { path: { anything: string } };
      /**
       * @description Anything passed in request
       **/
      response: { [x: string | number]: any };
    };
  };
  "/base64/{value}": {
    get: {
      param: { path: { value: string } };
      /**
       * @description Decoded base64 content.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/bytes/{n}": {
    get: {
      param: { path: { n: number } };
      /**
       * @description Bytes.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/delay/{delay}": {
    delete: {
      param: {
        path: {
          /**
           * @description 延迟时长，单位：秒
           **/
          delay: number;
        };
      };
      /**
       * @description A delayed response.
       **/
      response: { [x: string | number]: any };
    };
    get: {
      param: { path: { delay: number } };
      /**
       * @description A delayed response.
       **/
      response: { [x: string | number]: any };
    };
    patch: {
      param: { path: { delay: number } };
      /**
       * @description A delayed response.
       **/
      response: { [x: string | number]: any };
    };
    post: {
      param: {
        path: {
          /**
           * @description 5
           **/
          delay: number;
        };
      };
      /**
       * @description A delayed response.
       **/
      response: { [x: string | number]: any };
    };
    put: {
      param: { path: { delay: number } };
      /**
       * @description A delayed response.
       **/
      response: { [x: string | number]: any };
    };
    trace: {
      param: { path: { delay: number } };
      /**
       * @description A delayed response.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/drip": {
    get: {
      param: {
        query: {
          /**
           * @description The amount of time (in seconds) over which to drip each byte
           **/
          duration?: number;
          /**
           * @description The number of bytes to respond with
           **/
          numbytes?: number;
          /**
           * @description The response code that will be returned
           **/
          code?: number;
          /**
           * @description The amount of time (in seconds) to delay before responding
           **/
          delay?: number;
        };
      };
      /**
       * @description A dripped response.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/links/{n}/{offset}": {
    get: {
      param: { path: { n: number; offset: number } };
      /**
       * @description HTML links.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/range/{numbytes}": {
    get: {
      param: { path: { numbytes: number } };
      /**
       * @description Bytes.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/stream-bytes/{n}": {
    get: {
      param: { path: { n: number } };
      /**
       * @description Bytes.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/stream/{n}": {
    get: {
      param: { path: { n: number } };
      /**
       * @description Streamed JSON responses.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/uuid": {
    get: {
      /**
       * @description A UUID4.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/brotli": {
    get: {
      /**
       * @description Brotli-encoded data.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/deflate": {
    get: {
      /**
       * @description Defalte-encoded data.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/deny": {
    get: {
      /**
       * @description Denied message
       **/
      response: { [x: string | number]: any };
    };
  };
  "/encoding/utf8": {
    get: {
      /**
       * @description Encoded UTF-8 content.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/gzip": {
    get: {
      /**
       * @description GZip-encoded data.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/html": {
    get: {
      /**
       * @description An HTML page.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/json": {
    get: {
      /**
       * @description An JSON document.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/robots.txt": {
    get: {
      /**
       * @description Robots file
       **/
      response: { [x: string | number]: any };
    };
  };
  "/xml": {
    get: {
      /**
       * @description An XML document.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/cache": {
    get: {
      /**
       * @description Cached response
       **/
      response: { [x: string | number]: any };
    };
  };
  "/cache/{value}": {
    get: {
      param: { path: { value: number } };
      /**
       * @description Cache control set
       **/
      response: { [x: string | number]: any };
    };
  };
  "/etag/{etag}": {
    get: {
      param: { path: { etag: string } };
      /**
       * @description Normal response
       **/
      response: { [x: string | number]: any };
    };
  };
  "/response-headers": {
    get: {
      param: { query: { freeform?: string } };
      /**
       * @description Response headers
       **/
      response: { [x: string | number]: any };
    };
    post: {
      param: { query: { freeform?: string } };
      /**
       * @description Response headers
       **/
      response: { [x: string | number]: any };
    };
  };
  "/headers": {
    get: {
      /**
       * @description The request's headers.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/ip": {
    get: {
      /**
       * @description The Requester's IP Address.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/user-agent": {
    get: {
      /**
       * @description The request's User-Agent header.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/basic-auth/{user}/{passwd}": {
    get: {
      param: { path: { user: string; passwd: string } };
      /**
       * @description Sucessful authentication.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/bearer": {
    get: {
      /**
       * @description Sucessful authentication.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/digest-auth/{qop}/{user}/{passwd}": {
    get: {
      param: {
        path: {
          /**
           * @description auth or auth-int
           **/
          qop: string;
          user: string;
          passwd: string;
        };
      };
      /**
       * @description Sucessful authentication.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/digest-auth/{qop}/{user}/{passwd}/{algorithm}": {
    get: {
      param: {
        path: {
          /**
           * @description auth or auth-int
           **/
          qop: string;
          user: string;
          passwd: string;
          /**
           * @description MD5, SHA-256, SHA-512
           **/
          algorithm: string;
        };
      };
      /**
       * @description Sucessful authentication.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/digest-auth/{qop}/{user}/{passwd}/{algorithm}/{stale_after}": {
    get: {
      param: {
        path: {
          /**
           * @description auth or auth-int
           **/
          qop: string;
          user: string;
          passwd: string;
          /**
           * @description MD5, SHA-256, SHA-512
           **/
          algorithm: string;
          stale_after: string;
        };
      };
      /**
       * @description Sucessful authentication.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/hidden-basic-auth/{user}/{passwd}": {
    get: {
      param: { path: { user: string; passwd: string } };
      /**
       * @description Sucessful authentication.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/image/jpeg": {
    get: {
      /**
       * @description A JPEG image.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/image/png": {
    get: {
      /**
       * @description A PNG image.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/image/svg": {
    get: {
      /**
       * @description An SVG image.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/image/webp": {
    get: {
      /**
       * @description A WEBP image.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/image": {
    get: {
      /**
       * @description An image.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/cookies": {
    get: {
      /**
       * @description Set cookies.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/cookies/delete": {
    get: {
      param: { query: { freeform?: string } };
      /**
       * @description Redirect to cookie list
       **/
      response: { [x: string | number]: any };
    };
  };
  "/cookies/set": {
    get: {
      param: { query: { k1?: string; k2?: string } };
      /**
       * @description Redirect to cookie list
       **/
      response: { [x: string | number]: any };
    };
  };
  "/cookies/set/{name}/{value}": {
    get: {
      param: { path: { name: string; value: string } };
      /**
       * @description Set cookies and redirects to cookie list.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/absolute-redirect/{n}": {
    get: {
      param: { path: { n: number } };
      /**
       * @description A redirection.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/redirect-to": {
    delete: {
      /**
       * @description A redirection.
       **/
      response: { [x: string | number]: any };
    };
    get: {
      param: { query: { url: string; status_code?: number } };
      /**
       * @description A redirection.
       **/
      response: { [x: string | number]: any };
    };
    patch: {
      /**
       * @description A redirection.
       **/
      response: { [x: string | number]: any };
    };
    post: {
      param: { body: { url: string; status_code?: string } };
      /**
       * @description A redirection.
       **/
      response: { [x: string | number]: any };
    };
    put: {
      param: { body: { url: string; status_code?: string } };
      /**
       * @description A redirection.
       **/
      response: { [x: string | number]: any };
    };
    trace: {
      /**
       * @description A redirection.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/redirect/{n}": {
    get: {
      param: { path: { n: number } };
      /**
       * @description A redirection.
       **/
      response: { [x: string | number]: any };
    };
  };
  "/relative-redirect/{n}": {
    get: {
      param: { path: { n: number } };
      /**
       * @description A redirection.
       **/
      response: { [x: string | number]: any };
    };
  };
}
export type Paths_Intersection = PathsApifox_Echo_copy;
